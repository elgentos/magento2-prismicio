{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>For the love of Magento and Prismic we created a module to do a seamless integration between the two. It is a full replacement for the default CMS in Magento.</p> <p>This documentation should get you started and will contain useful information how to link Prismic and Magento.</p>"},{"location":"#tldr","title":"TLDR","text":"<p>Just install the module and start hacking.</p> <pre><code>composer require elgentos/module-prismicio\nbin/magento module:enable Elgentos_PrismicIO\nbin/magento setup:upgrade\n</code></pre>"},{"location":"best-practices/","title":"Best Practices","text":""},{"location":"best-practices/#best-practices","title":"Best Practices","text":"<ol> <li>Webhook Security</li> <li>Use strong secrets</li> <li>Validate webhook sources</li> <li> <p>Monitor webhook logs</p> </li> <li> <p>Debug Settings</p> </li> <li>Disable in production</li> <li>Use for development only</li> <li> <p>Monitor error logs</p> </li> <li> <p>Performance Impact</p> </li> <li>Consider logging overhead</li> <li>Monitor webhook processing</li> <li>Cache appropriately</li> </ol>"},{"location":"best-practices/#troubleshooting","title":"Troubleshooting","text":"<ol> <li>Webhook Issues</li> <li>Verify secret configuration</li> <li>Check webhook logs</li> <li> <p>Monitor response codes</p> </li> <li> <p>Debug Problems</p> </li> <li>Review permission settings</li> <li>Check log configuration</li> <li>Verify store settings </li> </ol>"},{"location":"advanced/integration-fields/","title":"Integration Fields","text":"<p>Integration Fields allow you to use Magento product and category data directly in your Prismic documents. This creates a dynamic connection between your Magento catalog and Prismic content.</p>"},{"location":"advanced/integration-fields/#configuration","title":"Configuration","text":""},{"location":"advanced/integration-fields/#basic-setup","title":"Basic Setup","text":"<ol> <li>Go to Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO</li> <li>Navigate to Integration Fields section</li> <li>Configure:</li> <li>Product Attributes to sync</li> <li>Product Visibility settings</li> <li>Access Token for security</li> <li>Disabled Products sync option</li> </ol>"},{"location":"advanced/integration-fields/#default-product-attributes","title":"Default Product Attributes","text":"<p>The following attributes are always available: - name - image - status - short_description - updated_at</p>"},{"location":"advanced/integration-fields/#setting-up-in-prismic","title":"Setting Up in Prismic","text":""},{"location":"advanced/integration-fields/#creating-integration-fields","title":"Creating Integration Fields","text":"<ol> <li>Go to your Prismic dashboard</li> <li>Navigate to Settings &gt; Integration fields</li> <li>Create a new Custom Integration</li> <li>Configure the endpoints:</li> <li>Products: <code>https://your-store.com/prismicio/integration/products</code></li> <li>Categories: <code>https://your-store.com/prismicio/integration/categories</code></li> <li>Add the Access Token if configured in Magento</li> </ol>"},{"location":"advanced/integration-fields/#adding-to-content-types","title":"Adding to Content Types","text":"<pre><code>{\n  \"Main\": {\n    \"featured_product\": {\n      \"type\": \"IntegrationFields\",\n      \"config\": {\n        \"catalog\": \"product_catalog\",\n        \"label\": \"Featured Product\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"advanced/integration-fields/#available-endpoints","title":"Available Endpoints","text":""},{"location":"advanced/integration-fields/#products-endpoint","title":"Products Endpoint","text":"<pre><code>GET /prismicio/integration/products\n</code></pre> <p>Returns product data in Prismic-compatible format:</p> <pre><code>{\n  \"results_size\": 100,\n  \"results\": [\n    {\n      \"id\": \"123\",\n      \"title\": \"Product Name\",\n      \"description\": \"Short description\",\n      \"image_url\": \"https://example.com/media/catalog/product/image.jpg\",\n      \"last_update\": 1673891234,\n      \"blob\": {\n        // All selected product attributes\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"advanced/integration-fields/#categories-endpoint","title":"Categories Endpoint","text":"<pre><code>GET /prismicio/integration/categories\n</code></pre> <p>Returns category data:</p> <pre><code>{\n  \"results_size\": 50,\n  \"results\": [\n    {\n      \"id\": \"4\",\n      \"title\": \"Category Name\",\n      \"description\": \"Category description\",\n      \"image_url\": \"https://example.com/media/catalog/category/image.jpg\",\n      \"last_update\": 1673891234,\n      \"blob\": {\n        // All category attributes\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"advanced/integration-fields/#security","title":"Security","text":""},{"location":"advanced/integration-fields/#access-token-protection","title":"Access Token Protection","text":"<ol> <li> <p>Configure an access token in Magento:    <pre><code>&lt;prismicio&gt;\n    &lt;integration_fields&gt;\n        &lt;access_token&gt;your-secret-token&lt;/access_token&gt;\n    &lt;/integration_fields&gt;\n&lt;/prismicio&gt;\n</code></pre></p> </li> <li> <p>Use the same token in Prismic's Integration Fields setup</p> </li> </ol>"},{"location":"advanced/integration-fields/#authentication-headers","title":"Authentication Headers","text":"<p>The endpoints use Basic Authentication: - Username: Your access token - Password: Can be left empty</p>"},{"location":"advanced/integration-fields/#configuration-options","title":"Configuration Options","text":""},{"location":"advanced/integration-fields/#product-sync-options","title":"Product Sync Options","text":"<ol> <li> <p>Visibility Settings <pre><code>&lt;visibility&gt;4&lt;/visibility&gt;  &lt;!-- Catalog, Search --&gt;\n</code></pre></p> </li> <li> <p>Disabled Products <pre><code>&lt;sync_disabled_products&gt;0&lt;/sync_disabled_products&gt;\n</code></pre></p> </li> <li> <p>Custom Attributes <pre><code>&lt;attributes&gt;sku,price,special_price&lt;/attributes&gt;\n</code></pre></p> </li> </ol>"},{"location":"advanced/integration-fields/#implementation-examples","title":"Implementation Examples","text":""},{"location":"advanced/integration-fields/#basic-product-integration","title":"Basic Product Integration","text":"<pre><code>{\n  \"Main\": {\n    \"related_products\": {\n      \"type\": \"Group\",\n      \"config\": {\n        \"fields\": {\n          \"product\": {\n            \"type\": \"IntegrationFields\",\n            \"config\": {\n              \"catalog\": \"product_catalog\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"advanced/integration-fields/#category-selection","title":"Category Selection","text":"<pre><code>{\n  \"Main\": {\n    \"featured_category\": {\n      \"type\": \"IntegrationFields\",\n      \"config\": {\n        \"catalog\": \"category_catalog\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"advanced/integration-fields/#best-practices","title":"Best Practices","text":"<ol> <li>Performance</li> <li>Limit the number of attributes synced</li> <li>Use pagination for large catalogs</li> <li> <p>Consider caching strategies</p> </li> <li> <p>Security</p> </li> <li>Always use access tokens in production</li> <li>Limit exposed attributes to necessary data</li> <li> <p>Regularly rotate access tokens</p> </li> <li> <p>Data Management</p> </li> <li>Sync only required product visibility types</li> <li>Consider impact of disabled products</li> <li> <p>Keep attribute selection minimal</p> </li> <li> <p>Maintenance</p> </li> <li>Monitor API response times</li> <li>Review and update synced attributes</li> <li>Check for outdated product references</li> </ol>"},{"location":"advanced/integration-fields/#troubleshooting","title":"Troubleshooting","text":"<ol> <li>Authentication Issues</li> <li>Verify access token configuration</li> <li>Check authentication headers</li> <li> <p>Confirm Prismic integration setup</p> </li> <li> <p>Missing Data</p> </li> <li>Check product visibility settings</li> <li>Verify attribute configuration</li> <li> <p>Confirm product/category status</p> </li> <li> <p>Performance Problems</p> </li> <li>Review number of synced attributes</li> <li>Check pagination settings</li> <li>Monitor API response times </li> </ol>"},{"location":"advanced/multi-repo/","title":"Multiple Repositories","text":"<p>The module supports working with multiple Prismic repositories, allowing different stores or themes to use different content repositories.</p>"},{"location":"advanced/multi-repo/#configuration","title":"Configuration","text":""},{"location":"advanced/multi-repo/#enabling-multi-repo-support","title":"Enabling Multi-repo Support","text":"<ol> <li>Go to Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO</li> <li>Navigate to Multi Repository section</li> <li>Set \"Enable Multiple Repositories\" to \"Yes\"</li> <li>Configure the \"Repository Field\" setting</li> </ol>"},{"location":"advanced/multi-repo/#repository-field","title":"Repository Field","text":"<p>The repository field determines which Prismic field contains the repository information:</p> <pre><code>{\n  \"Main\": {\n    \"repository\": {\n      \"type\": \"Text\",\n      \"config\": {\n        \"label\": \"Repository\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"advanced/multi-repo/#implementation","title":"Implementation","text":""},{"location":"advanced/multi-repo/#store-specific-repositories","title":"Store-specific Repositories","text":"<p>Each store view can connect to a different Prismic repository:</p> <ol> <li>Switch to specific store view in admin</li> <li>Configure Prismic API endpoint for that store</li> <li>Set appropriate API token</li> </ol>"},{"location":"advanced/multi-repo/#cache-considerations","title":"Cache Considerations","text":"<p>When using multiple repositories:</p> <ol> <li> <p>Cache Flush Settings <pre><code>&lt;prismicio&gt;\n    &lt;cache_flush&gt;\n        &lt;content_types&gt;page,blog_post&lt;/content_types&gt;\n    &lt;/cache_flush&gt;\n&lt;/prismicio&gt;\n</code></pre></p> </li> <li> <p>Cache Tags</p> </li> <li>Each repository gets unique cache tags</li> <li>Content types are prefixed with repository ID</li> <li>Cache is cleared per repository</li> </ol>"},{"location":"advanced/multi-repo/#best-practices","title":"Best Practices","text":"<ol> <li>Repository Organization</li> <li>Use consistent content types across repos</li> <li>Document repository purposes</li> <li> <p>Consider content sharing needs</p> </li> <li> <p>Performance</p> </li> <li>Monitor API usage per repository</li> <li>Configure appropriate cache settings</li> <li> <p>Consider CDN implementation</p> </li> <li> <p>Maintenance</p> </li> <li>Keep repositories synchronized</li> <li>Document repository relationships</li> <li>Plan for content migrations</li> </ol>"},{"location":"advanced/multi-repo/#troubleshooting","title":"Troubleshooting","text":"<ol> <li>Repository Connection</li> <li>Verify API endpoints</li> <li>Check access tokens</li> <li> <p>Confirm store assignments</p> </li> <li> <p>Cache Issues</p> </li> <li>Review cache configuration</li> <li>Check cache tags</li> <li> <p>Monitor cache storage</p> </li> <li> <p>Content Sync</p> </li> <li>Validate webhook setup</li> <li>Check repository field values</li> <li>Review store-specific settings </li> </ol>"},{"location":"advanced/routes-admin/","title":"Routes Management","text":"<p>The module provides an admin interface for managing Prismic routes under Content &gt; PrismicIO &gt; Routes.</p>"},{"location":"advanced/routes-admin/#accessing-routes","title":"Accessing Routes","text":"<ol> <li>Log into your Magento admin panel</li> <li>Navigate to Content &gt; PrismicIO &gt; Routes</li> <li>Here you can view and manage all Prismic routes</li> </ol>"},{"location":"advanced/routes-admin/#managing-routes","title":"Managing Routes","text":""},{"location":"advanced/routes-admin/#creating-a-route","title":"Creating a Route","text":"<ol> <li>Click \"Add New Route\"</li> <li>Fill in the required fields:</li> <li>Title: For admin reference</li> <li>Content Type: The Prismic content type (e.g., blog_post)</li> <li>Route: The URL path (must start with /, e.g., /blog)</li> <li>Store View: Select which store views this route applies to</li> </ol>"},{"location":"advanced/routes-admin/#editing-routes","title":"Editing Routes","text":"<ol> <li>Find the route in the grid</li> <li>Click \"Edit\" in the Action column</li> <li>Modify the route settings</li> <li>Click \"Save Route\"</li> </ol>"},{"location":"advanced/routes-admin/#route-settings","title":"Route Settings","text":"<ul> <li>Title: Internal reference name</li> <li>Content Type: Matches your Prismic custom type</li> <li>Route: URL path pattern</li> <li>Store Views: Which stores show this content</li> <li>Status: Enable/disable the route</li> </ul>"},{"location":"advanced/routes-admin/#url-structure","title":"URL Structure","text":"<p>Routes define how Prismic content is accessed on your store:</p> <pre><code>/{route}/{uid}\nExample: /blog/summer-fashion-trends\n</code></pre>"},{"location":"advanced/routes-admin/#best-practices","title":"Best Practices","text":"<ol> <li>URL Structure</li> <li>Use clear, descriptive paths</li> <li>Keep URLs SEO-friendly</li> <li> <p>Consider multi-store impacts</p> </li> <li> <p>Content Types</p> </li> <li>Match Prismic custom types exactly</li> <li>One route per content type per store</li> <li> <p>Consider language variations</p> </li> <li> <p>Store Views</p> </li> <li>Assign routes appropriately</li> <li>Consider URL conflicts</li> <li>Plan for translations</li> </ol>"},{"location":"advanced/routes-admin/#troubleshooting","title":"Troubleshooting","text":"<ol> <li>404 Errors</li> <li>Verify route is enabled</li> <li>Check store view assignment</li> <li> <p>Confirm content type exists</p> </li> <li> <p>URL Conflicts</p> </li> <li>Check for duplicate routes</li> <li>Review store view assignments</li> <li> <p>Verify URL patterns</p> </li> <li> <p>Content Not Showing</p> </li> <li>Validate content type name</li> <li>Check store view settings</li> <li>Review route status </li> </ol>"},{"location":"advanced/routing/","title":"Routing","text":"<p>The Prismic module provides a flexible routing system that allows you to map Prismic documents to URLs in your Magento store. This system integrates with Magento's URL rewrite functionality to maintain SEO-friendly URLs and proper redirects.</p>"},{"location":"advanced/routing/#url-rewrite-configuration","title":"URL Rewrite Configuration","text":""},{"location":"advanced/routing/#basic-setup","title":"Basic Setup","text":"<ol> <li>Go to Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO</li> <li>Navigate to the URL Rewrites section</li> <li>Select which content types should generate automatic URL rewrites</li> <li>Configure webhook settings to enable automatic URL generation</li> </ol>"},{"location":"advanced/routing/#database-structure","title":"Database Structure","text":"<p>The module uses two main tables for routing: - <code>prismicio_route</code> - Stores the main route information - <code>prismicio_route_store</code> - Maps routes to specific store views</p>"},{"location":"advanced/routing/#automatic-url-generation","title":"Automatic URL Generation","text":"<p>The module can automatically generate URLs based on your Prismic documents:</p> <ol> <li> <p>Content Type Selection <pre><code>&lt;prismicio&gt;\n    &lt;url_rewrites&gt;\n        &lt;content_types&gt;blog_post,landing_page&lt;/content_types&gt;\n    &lt;/url_rewrites&gt;\n&lt;/prismicio&gt;\n</code></pre></p> </li> <li> <p>Webhook Integration</p> </li> <li>Set up a webhook in Prismic pointing to your Magento instance</li> <li>Configure the webhook secret in Magento</li> <li>The module will automatically generate URLs when content is published</li> </ol>"},{"location":"advanced/routing/#manual-route-management","title":"Manual Route Management","text":"<p>You can manually manage routes through the Magento admin:</p> <pre><code>&lt;route id=\"custom_route\" frontName=\"blog\"&gt;\n    &lt;module name=\"Elgentos_PrismicIO\" /&gt;\n&lt;/route&gt;\n</code></pre>"},{"location":"advanced/routing/#url-structure","title":"URL Structure","text":""},{"location":"advanced/routing/#default-pattern","title":"Default Pattern","text":"<pre><code>/{content-type}/{uid}\nexample: /blog/summer-fashion-trends\n</code></pre>"},{"location":"advanced/routing/#custom-url-fields","title":"Custom URL Fields","text":"<p>You can specify custom URL fields in your Prismic content types: <pre><code>{\n  \"Main\": {\n    \"url_key\": {\n      \"type\": \"Text\",\n      \"config\": {\n        \"label\": \"URL Key\",\n        \"placeholder\": \"custom-url-key\"\n      }\n    }\n  }\n}\n</code></pre></p>"},{"location":"advanced/routing/#multi-store-support","title":"Multi-store Support","text":"<p>The routing system supports Magento's multi-store setup:</p> <ol> <li>Store-Specific Routes</li> <li>Routes can be assigned to specific store views</li> <li> <p>Different URLs can be used for the same content in different stores</p> </li> <li> <p>Language-Based Routing <pre><code>// Example store-specific URL pattern\n/en/blog/post-title    // English store\n/nl/blog/post-titel    // Dutch store\n</code></pre></p> </li> </ol>"},{"location":"advanced/routing/#layout-handles","title":"Layout Handles","text":"<p>The module generates specific layout handles for Prismic routes:</p> <pre><code>&lt;!-- For a blog post content type --&gt;\n&lt;handle id=\"prismicio_by_type_blog_post\"&gt;\n    &lt;reference name=\"content\"&gt;\n        &lt;block class=\"Elgentos\\PrismicIO\\Block\\Template\" name=\"blog.content\" template=\"blog/post.phtml\"/&gt;\n    &lt;/reference&gt;\n&lt;/handle&gt;\n</code></pre>"},{"location":"advanced/routing/#cache-management","title":"Cache Management","text":"<p>The routing system integrates with Magento's cache:</p> <ol> <li>Cache Tags</li> <li>Routes are tagged appropriately for cache invalidation</li> <li> <p>Content updates trigger relevant cache flushes</p> </li> <li> <p>Configuration <pre><code>&lt;prismicio&gt;\n    &lt;cache_flush&gt;\n        &lt;content_types&gt;blog_post,landing_page&lt;/content_types&gt;\n    &lt;/cache_flush&gt;\n&lt;/prismicio&gt;\n</code></pre></p> </li> </ol>"},{"location":"advanced/routing/#troubleshooting","title":"Troubleshooting","text":"<p>Common routing issues and solutions:</p> <ol> <li>URLs Not Generating</li> <li>Verify webhook configuration</li> <li>Check content type is selected in URL rewrites configuration</li> <li> <p>Ensure proper permissions are set</p> </li> <li> <p>404 Errors</p> </li> <li>Verify route exists in <code>prismicio_route</code> table</li> <li>Check store assignment in <code>prismicio_route_store</code></li> <li> <p>Confirm content type is properly configured</p> </li> <li> <p>Multiple Redirects</p> </li> <li>Check for conflicting URL rewrites</li> <li>Verify store view configuration</li> <li>Review custom URL keys</li> </ol>"},{"location":"advanced/routing/#best-practices","title":"Best Practices","text":"<ol> <li>URL Structure</li> <li>Use consistent patterns across content types</li> <li>Keep URLs clean and meaningful</li> <li> <p>Consider SEO implications</p> </li> <li> <p>Performance</p> </li> <li>Enable caching for routes</li> <li>Use webhooks for automatic updates</li> <li> <p>Monitor URL rewrite table size</p> </li> <li> <p>Maintenance</p> </li> <li>Regularly review and clean up unused routes</li> <li>Maintain proper redirects for changed URLs</li> <li>Document custom routing patterns </li> </ol>"},{"location":"advanced/sitemap/","title":"Sitemap Integration","text":"<p>The Prismic module integrates with Magento's sitemap functionality to automatically include your Prismic content in your store's XML sitemap.</p>"},{"location":"advanced/sitemap/#configuration","title":"Configuration","text":""},{"location":"advanced/sitemap/#basic-setup","title":"Basic Setup","text":"<ol> <li>Go to Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO</li> <li>Navigate to the Sitemap section</li> <li>Select which content types to include in the sitemap</li> </ol>"},{"location":"advanced/sitemap/#sitemap-settings","title":"Sitemap Settings","text":"<p>Configure sitemap-specific settings under Stores &gt; Configuration &gt; Catalog &gt; XML Sitemap:</p> <ol> <li>Frequency</li> <li>How often the content is updated</li> <li>Default: 'daily'</li> <li> <p>Options: always, hourly, daily, weekly, monthly, yearly, never</p> </li> <li> <p>Priority</p> </li> <li>Priority relative to other URLs</li> <li>Default: '0.25'</li> <li>Valid values: 0.0 to 1.0</li> </ol> <pre><code>&lt;sitemap&gt;\n    &lt;prismic&gt;\n        &lt;priority&gt;0.25&lt;/priority&gt;\n        &lt;changefreq&gt;daily&lt;/changefreq&gt;\n    &lt;/prismic&gt;\n&lt;/sitemap&gt;\n</code></pre>"},{"location":"advanced/sitemap/#content-type-selection","title":"Content Type Selection","text":""},{"location":"advanced/sitemap/#including-content-types","title":"Including Content Types","text":"<p>Specify which content types should appear in the sitemap:</p> <pre><code>&lt;prismicio&gt;\n    &lt;sitemap&gt;\n        &lt;content_types&gt;blog_post,landing_page,product_story&lt;/content_types&gt;\n    &lt;/sitemap&gt;\n&lt;/prismicio&gt;\n</code></pre>"},{"location":"advanced/sitemap/#multi-store-support","title":"Multi-store Support","text":"<p>The module handles multi-store setups: - Generates store-specific URLs - Respects store-specific language settings - Handles store-specific content types</p>"},{"location":"advanced/sitemap/#technical-details","title":"Technical Details","text":""},{"location":"advanced/sitemap/#url-generation","title":"URL Generation","text":"<p>The module: 1. Queries each configured content type 2. Generates proper URLs using the LinkResolver 3. Includes last publication date from Prismic 4. Applies store-specific URL formatting</p>"},{"location":"advanced/sitemap/#example-output","title":"Example Output","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com/blog/summer-trends&lt;/loc&gt;\n        &lt;lastmod&gt;2024-01-15T10:30:00+00:00&lt;/lastmod&gt;\n        &lt;changefreq&gt;daily&lt;/changefreq&gt;\n        &lt;priority&gt;0.25&lt;/priority&gt;\n    &lt;/url&gt;\n    &lt;!-- Additional URLs... --&gt;\n&lt;/urlset&gt;\n</code></pre>"},{"location":"advanced/sitemap/#implementation","title":"Implementation","text":""},{"location":"advanced/sitemap/#automatic-integration","title":"Automatic Integration","text":"<p>The module automatically integrates with Magento's sitemap generation:</p> <pre><code>// PrismicPages implements ItemProviderInterface\nclass PrismicPages implements ItemProviderInterface\n{\n    public function getItems($storeId): array\n    {\n        // Fetches all configured content types\n        // Generates sitemap items\n        // Returns formatted array for sitemap\n    }\n}\n</code></pre>"},{"location":"advanced/sitemap/#custom-implementation","title":"Custom Implementation","text":"<p>You can extend the default behavior:</p> <pre><code>class CustomPrismicPages extends PrismicPages\n{\n    protected function getSitemapContentTypes($store): array\n    {\n        // Your custom logic for content types\n        return array_filter($customContentTypes);\n    }\n}\n</code></pre>"},{"location":"advanced/sitemap/#best-practices","title":"Best Practices","text":"<ol> <li>Content Type Selection</li> <li>Include only publicly accessible content</li> <li>Consider content update frequency</li> <li> <p>Exclude temporary or test content</p> </li> <li> <p>Priority Setting</p> </li> <li>Set higher priority for main content (0.8-1.0)</li> <li>Use medium priority for regular content (0.4-0.7)</li> <li> <p>Lower priority for auxiliary content (0.1-0.3)</p> </li> <li> <p>Update Frequency</p> </li> <li>Match changefreq to actual content updates</li> <li>Use appropriate frequency for content type</li> <li> <p>Consider content lifecycle</p> </li> <li> <p>Performance</p> </li> <li>Monitor sitemap size</li> <li>Use pagination for large content sets</li> <li>Consider caching strategies</li> </ol>"},{"location":"advanced/sitemap/#troubleshooting","title":"Troubleshooting","text":"<ol> <li>Missing Content</li> <li>Verify content type is enabled in configuration</li> <li>Check content is published in Prismic</li> <li> <p>Confirm proper store assignment</p> </li> <li> <p>Invalid URLs</p> </li> <li>Check LinkResolver configuration</li> <li>Verify store URL settings</li> <li> <p>Review content type routing</p> </li> <li> <p>Generation Issues</p> </li> <li>Check Magento cron is running</li> <li>Verify file permissions</li> <li>Monitor memory usage for large sitemaps</li> </ol>"},{"location":"advanced/sitemap/#maintenance","title":"Maintenance","text":"<ol> <li>Regular Tasks</li> <li>Review included content types</li> <li>Update priorities based on analytics</li> <li> <p>Monitor sitemap size and generation time</p> </li> <li> <p>Optimization</p> </li> <li>Remove unnecessary content types</li> <li>Adjust update frequencies</li> <li>Clean up old/unused URLs </li> </ol>"},{"location":"advanced/webhooks/","title":"Webhooks and Debug Settings","text":"<p>The module provides webhook support for content updates and debug options for development.</p>"},{"location":"advanced/webhooks/#webhook-configuration","title":"Webhook Configuration","text":""},{"location":"advanced/webhooks/#setting-up-webhooks","title":"Setting Up Webhooks","text":"<ol> <li>Go to Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO</li> <li>Navigate to Webhook Settings</li> <li>Configure the webhook secret</li> </ol>"},{"location":"advanced/webhooks/#in-prismic","title":"In Prismic","text":"<ol> <li>Go to your Prismic repository settings</li> <li>Navigate to Webhooks</li> <li>Add a new webhook:    <pre><code>URL: https://your-store.com/prismicio/webhook\nSecret: [Your configured secret]\n</code></pre></li> </ol>"},{"location":"advanced/webhooks/#webhook-events","title":"Webhook Events","text":"<p>The webhook handles: - Content publication - Content deletion - Content updates - URL rewrite generation - Cache invalidation</p>"},{"location":"basics/configuration/","title":"Configuration","text":"<p>The Prismic module can be configured in the Magento admin panel under Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO.</p>"},{"location":"basics/configuration/#general-settings","title":"General Settings","text":""},{"location":"basics/configuration/#basic-configuration","title":"Basic Configuration","text":"<ul> <li>Enabled - Enable/disable the Prismic integration</li> <li>API Endpoint (URL) - Your Prismic repository API endpoint</li> <li>Access Token - Your Prismic API access token</li> </ul>"},{"location":"basics/configuration/#multi-repository-support","title":"Multi-repository Support","text":"<ul> <li>Enabled - Enable support for querying multiple Prismic repositories</li> <li>Field - Specify which field to use for matching documents across repositories (default: uid)</li> </ul>"},{"location":"basics/configuration/#content-settings","title":"Content Settings","text":""},{"location":"basics/configuration/#language-configuration","title":"Language Configuration","text":"<ul> <li>Language - Set the primary content language for Prismic documents</li> <li>Language Fallback - Configure a fallback language if content isn't available in primary language</li> <li>Default Content Type - Set the default content type for Prismic documents</li> </ul>"},{"location":"basics/configuration/#content-features","title":"Content Features","text":"<ul> <li>Fetchlinks - Specify which related fields to fetch from Prismic in one call (format: <code>customtype.field,customtype.field</code>)</li> <li>Debugging - Enable debug output in developer mode</li> <li>Throw Exceptions - Enable exception throwing for layout errors in developer mode</li> <li>Preview - Enable Prismic preview features</li> </ul>"},{"location":"basics/configuration/#integration-fields","title":"Integration Fields","text":""},{"location":"basics/configuration/#product-integration","title":"Product Integration","text":"<ul> <li>Product Attributes - Select which product attributes to make available in Prismic</li> <li>Synchronize Disabled Products - Choose whether to sync disabled products</li> <li>Visibilities to Synchronize - Select which product visibility types to sync</li> <li>Access Token - Set access token for integration fields API</li> </ul>"},{"location":"basics/configuration/#default-available-attributes","title":"Default Available Attributes","text":"<p>The following attributes are always available: - name - image - status - short_description - updated_at</p>"},{"location":"basics/configuration/#webhook-configuration","title":"Webhook Configuration","text":"<ul> <li>Secret - Set the webhook secret for authentication</li> <li>Content Types for URL Rewrites - Select content types for automatic URL rewrite generation</li> <li>Cache Flush Content Types - Select content types that trigger cache flush on update</li> </ul>"},{"location":"basics/configuration/#sitemap-settings","title":"Sitemap Settings","text":""},{"location":"basics/configuration/#prismic-pages-options","title":"Prismic Pages Options","text":"<ul> <li>Include Content Types - Select which content types to include in sitemap</li> <li>Frequency - Set update frequency for Prismic pages</li> <li>Priority - Set priority for Prismic pages (0.0 to 1.0)</li> </ul>"},{"location":"basics/configuration/#url-rewrites","title":"URL Rewrites","text":"<ul> <li>Content Types - Select which content types should generate automatic URL rewrites</li> <li>Requires webhook setup for automatic URL rewrite generation</li> </ul>"},{"location":"basics/configuration/#cache-management","title":"Cache Management","text":"<ul> <li>Cache Flush Content Types - Select which content types trigger cache flush when updated</li> <li>Requires webhook setup for automatic cache management</li> </ul>"},{"location":"basics/configuration/#technical-details","title":"Technical Details","text":""},{"location":"basics/configuration/#configuration-paths","title":"Configuration Paths","text":"<p>All configuration values are stored under the <code>prismicio</code> section in Magento's configuration:</p> <pre><code>&lt;prismicio&gt;\n    &lt;general&gt;\n        &lt;enabled&gt;0&lt;/enabled&gt;\n        &lt;endpoint/&gt;\n        &lt;token/&gt;\n    &lt;/general&gt;\n    &lt;multirepo&gt;\n        &lt;enabled&gt;0&lt;/enabled&gt;\n        &lt;field&gt;uid&lt;/field&gt;\n    &lt;/multirepo&gt;\n    &lt;content&gt;\n        &lt;language/&gt;\n        &lt;language_fallback/&gt;\n        &lt;content_type/&gt;\n        &lt;fetchlinks/&gt;\n        &lt;allow_debug&gt;1&lt;/allow_debug&gt;\n        &lt;throw_exceptions&gt;0&lt;/throw_exceptions&gt;\n        &lt;allow_preview&gt;0&lt;/allow_preview&gt;\n    &lt;/content&gt;\n    &lt;integration_fields&gt;\n        &lt;attributes&gt;sku&lt;/attributes&gt;\n        &lt;sync_disabled_products&gt;0&lt;/sync_disabled_products&gt;\n        &lt;visibility&gt;4&lt;/visibility&gt;\n    &lt;/integration_fields&gt;\n&lt;/prismicio&gt;\n</code></pre>"},{"location":"basics/configuration/#security-considerations","title":"Security Considerations","text":"<ul> <li>Access tokens should be kept secure</li> <li>Preview mode should only be enabled when needed</li> <li>Debug mode should not be enabled in production</li> <li>Webhook secrets should be properly configured for security</li> </ul>"},{"location":"basics/configuration/#csp-configuration","title":"CSP Configuration","text":"<p>The module automatically configures Content Security Policy (CSP) rules for: - script-src: .prism.app-us1.com, .prismic.io - connect-src: .prism.app-us1.com, .prismic.io - img-src: .prism.app-us1.com, .prismic.io</p>"},{"location":"basics/configuration/#get-the-repository-url","title":"Get the repository url","text":"<p>Head over to Prismic.io, click Dashboard or Login</p> <ul> <li>click on your repository</li> <li>click on settings</li> <li>click on Configuration / Api &amp; Security</li> <li>copy the API endpoint</li> </ul> <p>Head over to the admin of your Magento installation.</p> <ul> <li>click on Stores / Configuration</li> <li>click on Elgentos / Prismic.IO</li> <li>under General<ul> <li>Enable Prismic</li> <li>Multi-repo</li> <li>Add the API endpoint copied over from Prismic</li> <li>optionally add a API secret see below</li> <li>save</li> </ul> </li> <li>Content section<ul> <li>Select default language (or set per store)</li> <li>Set Default content type</li> <li>Optionally set Fetchlinks</li> <li>Optionally enable Debugging</li> <li>Optionally enable Preview</li> </ul> </li> <li>Integration Fields section</li> <li>Product Attributes     Attributes to make available in Prismic Integration Fields. The following attributes will always be made available: name, image, status, short_description, updated_at.</li> <li>Sitemap section</li> </ul>"},{"location":"basics/content-types/","title":"Content Types","text":"<p>Content types in Prismic define the structure of your content. They are like templates that specify which fields are available for your content editors. In the Magento-Prismic integration, content types are used to organize and display different kinds of content.</p>"},{"location":"basics/content-types/#understanding-content-types","title":"Understanding Content Types","text":"<p>A content type in Prismic might include: - Basic fields (Text, Number, Boolean, etc.) - Rich Text fields for formatted content - Link fields for internal/external links - Media fields for images and other assets - Slices for flexible content blocks - Integration fields for Magento product data</p>"},{"location":"basics/content-types/#setting-up-content-types-in-prismic","title":"Setting Up Content Types in Prismic","text":"<ol> <li>Go to your Prismic dashboard</li> <li>Navigate to Custom Types</li> <li>Click \"Create new\"</li> <li>Choose between Repeatable Type or Single Type:</li> <li>Repeatable Type: For content that can have multiple instances (e.g., blog posts, products)</li> <li>Single Type: For unique content (e.g., homepage, about page)</li> <li>Define your fields:    <pre><code>{\n  \"Main\" : {\n    \"title\" : {\n      \"type\" : \"Text\",\n      \"config\" : {\n        \"label\" : \"Title\"\n      }\n    },\n    \"content\" : {\n      \"type\" : \"StructuredText\",\n      \"config\" : {\n        \"label\" : \"Content\"\n      }\n    },\n    \"featured_image\" : {\n      \"type\" : \"Image\",\n      \"config\" : {\n        \"label\" : \"Featured Image\"\n      }\n    }\n  }\n}\n</code></pre></li> </ol>"},{"location":"basics/content-types/#configuring-content-types-in-magento","title":"Configuring Content Types in Magento","text":""},{"location":"basics/content-types/#default-content-type","title":"Default Content Type","text":"<p>Set your default content type in Magento admin: 1. Go to Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO 2. Under Content Settings, select your \"Default Content Type\" 3. This will be used when no specific content type is specified</p>"},{"location":"basics/content-types/#layout-specific-content-types","title":"Layout-Specific Content Types","text":"<p>You can specify different content types for different layouts:</p> <pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\Template\" name=\"prismic.content\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"content_type\" xsi:type=\"string\"&gt;blog_post&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"basics/content-types/#best-practices","title":"Best Practices","text":"<ol> <li>Naming Conventions</li> <li>Use clear, descriptive names</li> <li>Follow a consistent pattern (e.g., <code>page_</code>, <code>blog_</code>, <code>product_</code>)</li> <li> <p>Avoid spaces and special characters</p> </li> <li> <p>Field Organization</p> </li> <li>Group related fields together</li> <li>Use tabs for better organization</li> <li> <p>Consider the editing experience</p> </li> <li> <p>Integration Fields</p> </li> <li>Use Integration Fields for Magento product data</li> <li>Configure which product attributes to expose</li> <li> <p>Consider performance implications</p> </li> <li> <p>Content Type Planning <pre><code>my_page/\n\u251c\u2500\u2500 Main\n\u2502   \u251c\u2500\u2500 title (Text)\n\u2502   \u251c\u2500\u2500 description (Rich Text)\n\u2502   \u2514\u2500\u2500 featured_image (Image)\n\u251c\u2500\u2500 SEO\n\u2502   \u251c\u2500\u2500 meta_title (Text)\n\u2502   \u251c\u2500\u2500 meta_description (Text)\n\u2502   \u2514\u2500\u2500 og_image (Image)\n\u2514\u2500\u2500 Slices\n    \u251c\u2500\u2500 text_block\n    \u251c\u2500\u2500 image_gallery\n    \u2514\u2500\u2500 product_showcase\n</code></pre></p> </li> </ol>"},{"location":"basics/content-types/#technical-implementation","title":"Technical Implementation","text":""},{"location":"basics/content-types/#fetching-content-by-type","title":"Fetching Content by Type","text":"<pre><code>// In your block class\npublic function getContent()\n{\n    $contentType = $this-&gt;getContentType() ?? 'default_type';\n    $api = $this-&gt;getPrismicApi();\n\n    return $api-&gt;query([\n        Predicates::at('document.type', $contentType)\n    ]);\n}\n</code></pre>"},{"location":"basics/content-types/#content-type-specific-templates","title":"Content Type-Specific Templates","text":"<pre><code>&lt;!-- Layout XML --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Template\" name=\"prismic.content\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"content_type\" xsi:type=\"string\"&gt;blog_post&lt;/argument&gt;\n        &lt;argument name=\"template\" xsi:type=\"string\"&gt;prismic/content/blog-post.phtml&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"basics/content-types/#common-content-types","title":"Common Content Types","text":"<ol> <li>Pages</li> <li>Homepage</li> <li>About page</li> <li>Contact page</li> <li> <p>Landing pages</p> </li> <li> <p>Marketing Content</p> </li> <li>Banners</li> <li>Promotions</li> <li> <p>Campaign pages</p> </li> <li> <p>Blog/News</p> </li> <li>Blog posts</li> <li>News articles</li> <li> <p>Press releases</p> </li> <li> <p>Product Enhancement</p> </li> <li>Extended descriptions</li> <li>Usage guides</li> <li>Product stories</li> </ol>"},{"location":"basics/content-types/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Content Not Displaying: Verify content type name matches exactly</li> <li>URL Rewrites Not Generating: Check webhook configuration</li> <li>Integration Fields Not Working: Verify product attribute configuration</li> <li>Preview Not Working: Ensure preview mode is enabled for content type </li> </ul>"},{"location":"basics/installation/","title":"Installation of the Prismic module","text":""},{"location":"basics/installation/#prismic-repository","title":"Prismic repository","text":"<p>First, head over to Prismic.io and create a account and repository. After you created a module, install the Magento 2 module by elgentos.</p>"},{"location":"basics/installation/#module-installation","title":"Module installation","text":"<pre><code>composer install --prefer-dist --optimize-classloadder elgentos/module-prismicio\nbin/magento module:enable Elgentos_PrismicIO\nbin/magento setup:upgrade\n</code></pre>"},{"location":"layout/alternate-languages/","title":"Alternate Languages","text":"<p>The Prismic module provides support for multi-language content through the alternate language system, which integrates with Magento's multi-store functionality to serve content in different languages.</p>"},{"location":"layout/alternate-languages/#understanding-alternate-languages","title":"Understanding Alternate Languages","text":"<p>The alternate language system: - Generates proper <code>hreflang</code> tags for SEO - Works with Magento's multi-store setup - Supports language fallbacks - Handles x-default language specification - Works across multiple Prismic repositories</p>"},{"location":"layout/alternate-languages/#usage-example","title":"Usage Example","text":"<p>Add the alternate language block to your layout:</p> <pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\AlternateLanguage\" name=\"alternate.language\" template=\"Elgentos_PrismicIO::alternate-language.phtml\"/&gt;\n</code></pre> <p>Example template file (<code>alternate-language.phtml</code>):</p> <pre><code>&lt;?php\n/** @var $block \\Elgentos\\PrismicIO\\Block\\AlternateLanguage */\nforeach ($block-&gt;getAlternateData() as $alternate): ?&gt;\n    &lt;link rel=\"alternate\" \n          hreflang=\"&lt;?= $alternate['hreflang'] ?&gt;\"\n          href=\"&lt;?= $alternate['href'] ?&gt;\"\n          type=\"&lt;?= $alternate['type'] ?&gt;\"/&gt;\n&lt;?php endforeach; ?&gt;\n</code></pre>"},{"location":"layout/alternate-languages/#configuration","title":"Configuration","text":"<p>The system uses several configuration points:</p> <ol> <li>Store Configuration:</li> <li>Enable/disable Prismic for each store view</li> <li>Set content language per store view</li> <li> <p>Configure language fallbacks</p> </li> <li> <p>Magento Locale Settings:</p> </li> <li>Uses store locale settings for proper <code>hreflang</code> tags</li> <li>Automatically maps store locales to Prismic languages</li> </ol>"},{"location":"layout/alternate-languages/#language-mapping","title":"Language Mapping","text":"<p>The system handles language mapping in several ways:</p> <ol> <li> <p>Direct mapping:    <pre><code>Magento Locale -&gt; Prismic Language\nen_US -&gt; en-us\nnl_NL -&gt; nl-nl\n</code></pre></p> </li> <li> <p>Fallback mapping:</p> </li> <li>If a language isn't available, falls back to configured fallback language</li> <li> <p>Can be configured per store view</p> </li> <li> <p>Dynamic mapping:</p> </li> <li>Use '*' as language code to use store's locale</li> <li>Automatically converts Magento locale format (en_US) to Prismic format (en-us)</li> </ol>"},{"location":"layout/alternate-languages/#technical-details","title":"Technical Details","text":"<p>The alternate language system:</p> <ol> <li>Checks for multi-store mode</li> <li>Returns empty if in single store mode</li> <li> <p>Processes alternates only for active stores</p> </li> <li> <p>Generates alternate data including:</p> </li> <li>Language code</li> <li>Store code</li> <li>hreflang attribute</li> <li>URL for the alternate version</li> <li>Content type</li> <li> <p>Link object</p> </li> <li> <p>Handles special cases:</p> </li> <li>Generates x-default for default store view</li> <li>Respects store activity status</li> <li>Considers Prismic enablement per store</li> </ol>"},{"location":"layout/alternate-languages/#example-output","title":"Example Output","text":"<p>The system generates HTML like this:</p> <pre><code>&lt;link rel=\"alternate\" hreflang=\"en-us\" href=\"https://example.com/page\" type=\"text/html\"/&gt;\n&lt;link rel=\"alternate\" hreflang=\"nl-nl\" href=\"https://example.com/nl/pagina\" type=\"text/html\"/&gt;\n&lt;link rel=\"alternate\" hreflang=\"x-default\" href=\"https://example.com/page\" type=\"text/html\"/&gt;\n</code></pre>"},{"location":"layout/alternate-languages/#best-practices","title":"Best Practices","text":"<ol> <li>Always include the alternate language block in your head section</li> <li>Configure language fallbacks appropriately</li> <li>Ensure consistent content across languages</li> <li>Use proper locale codes in Magento store configuration</li> <li>Test alternate links in multi-store setups</li> <li>Consider SEO implications when setting up language variants</li> <li>Maintain consistent URL structures across languages </li> </ol>"},{"location":"layout/content/","title":"Content Blocks","text":"<p>The Prismic module provides several specialized block types for rendering Prismic content.</p>"},{"location":"layout/content/#available-block-types","title":"Available Block Types","text":""},{"location":"layout/content/#basic-blocks","title":"Basic Blocks","text":"<ul> <li><code>Elgentos\\PrismicIO\\Block\\Template</code> - Basic template block for Prismic content</li> <li><code>Elgentos\\PrismicIO\\Block\\Slices</code> - Handles slice content</li> <li><code>Elgentos\\PrismicIO\\Block\\Container</code> - Container block for grouping content</li> </ul>"},{"location":"layout/content/#dom-blocks","title":"DOM Blocks","text":"<p>The module provides specialized DOM blocks for rendering different types of Prismic content:</p>"},{"location":"layout/content/#text-content","title":"Text Content","text":"<ul> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Plain</code> - Renders plain content fields with HTML escaping</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Raw</code> - Renders content without HTML escaping</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Text</code> - Renders Rich Text as plain text</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\RichText</code> - Renders Rich Text with HTML formatting</li> </ul>"},{"location":"layout/content/#links","title":"Links","text":"<ul> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Link</code> - Renders a URL from a Prismic link field</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\ClickableLink</code> - Renders a complete <code>&lt;a&gt;</code> tag with the link</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\LinkWithTrailingSlash</code> - Renders a URL with a trailing slash (deprecated)</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Target</code> - Renders the target attribute of a link (e.g., \"_blank\")</li> </ul>"},{"location":"layout/content/#media","title":"Media","text":"<ul> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Image</code> - Renders an <code>&lt;img&gt;</code> tag with proper dimensions and alt text</li> </ul>"},{"location":"layout/content/#other-types","title":"Other Types","text":"<ul> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Boolean</code> - Renders boolean fields</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Date</code> - Renders date fields with proper formatting</li> </ul>"},{"location":"layout/content/#block-usage-examples","title":"Block Usage Examples","text":""},{"location":"layout/content/#text-content_1","title":"Text Content","text":"<pre><code>&lt;!-- Plain text with HTML escaping --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Plain\" name=\"my.text\" template=\"text_field\"/&gt;\n\n&lt;!-- Raw content without escaping --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Raw\" name=\"my.html\" template=\"html_field\"/&gt;\n\n&lt;!-- Rich Text field --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\RichText\" name=\"my.rich.text\" template=\"rich_text_field\"/&gt;\n</code></pre>"},{"location":"layout/content/#links_1","title":"Links","text":"<pre><code>&lt;!-- Basic URL --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Link\" name=\"my.link\" template=\"link_field\"/&gt;\n\n&lt;!-- Complete clickable link --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\ClickableLink\" name=\"my.clickable.link\" template=\"link_field\"/&gt;\n\n&lt;!-- Link target --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Target\" name=\"my.link.target\" template=\"link_field\"/&gt;\n</code></pre>"},{"location":"layout/content/#images","title":"Images","text":"<pre><code>&lt;!-- Image with dimensions --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Image\" name=\"my.image\" template=\"image_field\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"css_class\" xsi:type=\"string\"&gt;my-image-class&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/content/#dates","title":"Dates","text":"<pre><code>&lt;!-- Formatted date --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Date\" name=\"my.date\" template=\"date_field\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"format\" xsi:type=\"const\"&gt;IntlDateFormatter::LONG&lt;/argument&gt;\n        &lt;argument name=\"showTime\" xsi:type=\"boolean\"&gt;true&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/content/#working-with-references","title":"Working with References","text":"<p>When working with Prismic content, you can specify references to Prismic fields using the <code>reference</code> argument:</p> <pre><code>&lt;arguments&gt;\n    &lt;argument name=\"reference\" xsi:type=\"string\"&gt;data&lt;/argument&gt;\n&lt;/arguments&gt;\n</code></pre> <p>The reference determines which part of the Prismic document structure the block will access.</p>"},{"location":"layout/content/#best-practices","title":"Best Practices","text":"<ol> <li>Use the specialized block types provided by the module instead of generic Magento blocks</li> <li>Group related content using container blocks</li> <li>Leverage Prismic's block types appropriately (Plain, Link, etc.) for different content types</li> <li>Keep your content structure organized and maintainable</li> <li>Use the appropriate DOM block for each content type to ensure proper rendering and escaping</li> <li>Consider accessibility when using image and link blocks by providing proper alt text and ARIA attributes</li> <li>Use RichText blocks for formatted content and Plain blocks for simple text to maintain proper security </li> </ol>"},{"location":"layout/debug/","title":"Debugging","text":"<p>The Prismic module includes debugging capabilities to help you develop and troubleshoot your Prismic integration.</p>"},{"location":"layout/debug/#debug-block","title":"Debug Block","text":"<p>The module provides a debug block that can be useful during development. You can add this block to your layout to see the raw Prismic document data:</p> <pre><code>&lt;block name=\"prismicio_debug\" class=\"Elgentos\\PrismicIO\\Block\\Debug\"/&gt;\n</code></pre> <p>This will display all available Prismic data for the current document, which can be helpful when:</p> <ul> <li>Developing new templates</li> <li>Troubleshooting content issues</li> <li>Understanding the document structure</li> <li>Verifying field values</li> </ul>"},{"location":"layout/debug/#enabling-debug-mode","title":"Enabling Debug Mode","text":"<p>To enable debug mode:</p> <ol> <li>Go to the Magento admin panel</li> <li>Navigate to Stores &gt; Configuration &gt; Elgentos &gt; Prismic.IO</li> <li>Under the Content section, enable \"Debugging\"</li> <li>Clear the cache</li> </ol> <p>When debug mode is enabled, you'll see additional information in your browser's developer tools and on the page if the debug block is present. </p>"},{"location":"layout/debug/#debug-mode-features","title":"Debug Mode Features","text":"<p>When debug is enabled: - Detailed error messages - API request logging - Template path information - Context debugging tools</p>"},{"location":"layout/debug/#debug-output","title":"Debug Output","text":"<p>Add the debug parameter to see detailed information: <pre><code>?prismicio_debug=1\n</code></pre></p>"},{"location":"layout/debug/#exception-handling","title":"Exception Handling","text":"<p>With exceptions enabled: - Detailed stack traces - API error information - Context resolution errors - Template processing issues</p>"},{"location":"layout/document-links/","title":"Document Links","text":"<p>Document links are a special type of link in Prismic that allow you to create references between different Prismic documents. The Prismic module provides specialized blocks for handling these document links.</p>"},{"location":"layout/document-links/#understanding-document-links","title":"Understanding Document Links","text":"<p>A document link in Prismic contains: - A reference to another Prismic document - The ability to resolve to a proper URL in your Magento store - Optional link attributes (target, etc.)</p>"},{"location":"layout/document-links/#available-block-types","title":"Available Block Types","text":"<p>The module provides two main block types for document links:</p> <ul> <li><code>Elgentos\\PrismicIO\\Block\\Document\\Link</code> - Renders a URL for a document link</li> <li><code>Elgentos\\PrismicIO\\Block\\Dom\\Link</code> - Base link block that handles all link types</li> </ul>"},{"location":"layout/document-links/#usage-examples","title":"Usage Examples","text":""},{"location":"layout/document-links/#basic-document-link","title":"Basic Document Link","text":"<pre><code>&lt;!-- Render a document link URL --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Document\\Link\" name=\"my.document.link\" template=\"link_field\"/&gt;\n</code></pre>"},{"location":"layout/document-links/#complete-link-with-attributes","title":"Complete Link with Attributes","text":"<pre><code>&lt;!-- Render a complete document link with attributes --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\ClickableLink\" name=\"my.document.link\" template=\"link_field\"&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Target\" name=\"link.target\" template=\"link_field\"/&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/document-links/#template-example","title":"Template Example","text":"<p>Here's how you might use a document link in a template file:</p> <pre><code>&lt;?php\n/** @var $block \\Elgentos\\PrismicIO\\Block\\Template */\n?&gt;\n&lt;a href=\"&lt;?= $block-&gt;getChildHtml('my.document.link') ?&gt;\" \n   &lt;?= $block-&gt;getChildHtml('link.target') ?&gt;&gt;\n    &lt;?= __('Read More') ?&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"layout/document-links/#best-practices","title":"Best Practices","text":"<ol> <li>Use document links when you need to reference other Prismic documents</li> <li>Always consider the possibility that a linked document might not exist</li> <li>Use the appropriate block type based on your needs:</li> <li><code>Document\\Link</code> for just the URL</li> <li><code>Dom\\ClickableLink</code> for a complete <code>&lt;a&gt;</code> tag</li> <li>Include proper target attributes when needed</li> <li>Consider accessibility when implementing document links</li> </ol>"},{"location":"layout/document-links/#technical-details","title":"Technical Details","text":"<p>The document link system works by: 1. Resolving the document reference to a proper URL 2. Maintaining the original link context 3. Applying any necessary transformations (like adding trailing slashes if configured)</p> <p>When using <code>Document\\Link</code>, you can get the URL specifically for document views using the <code>getUrlForDocumentView()</code> method, which ensures the link is treated as a document reference. </p>"},{"location":"layout/handles/","title":"Layout Handles","text":"<p>Layout handles allow you to customize the presentation of your Prismic content within Magento 2. This page explains the available layout handles and how to use them effectively.</p>"},{"location":"layout/handles/#available-layout-handles","title":"Available Layout Handles","text":"<p>The module provides several layout handles that you can use to customize how Prismic content is displayed:</p> <ul> <li><code>prismicio_by_type_[content-type]</code> - Applied when viewing a Prismic document of a specific content type</li> <li><code>prismicio_content</code> - The main container where Prismic content is rendered</li> </ul>"},{"location":"layout/handles/#usage-examples","title":"Usage Examples","text":"<p>Here's an example of how to customize the layout for a homepage content type:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\"&gt;\n    &lt;body&gt;\n        &lt;referenceContainer name=\"prismicio_content\"&gt;\n            &lt;!-- Remove default title if needed --&gt;\n            &lt;referenceBlock name=\"page.main.title\" remove=\"true\"/&gt;\n\n            &lt;!-- Custom title block --&gt;\n            &lt;block name=\"homepage.title\" class=\"Elgentos\\PrismicIO\\Block\\Layout\\PageTitle\"&gt;\n                &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Plain\" template=\"data.title\"/&gt;\n            &lt;/block&gt;\n\n            &lt;!-- Main content template --&gt;\n            &lt;block class=\"Elgentos\\PrismicIO\\Block\\Template\" template=\"homepage.phtml\"&gt;\n                &lt;arguments&gt;\n                    &lt;argument name=\"reference\" xsi:type=\"string\"&gt;data&lt;/argument&gt;\n                &lt;/arguments&gt;\n\n                &lt;!-- Slice content --&gt;\n                &lt;block name=\"page.body\" class=\"Elgentos\\PrismicIO\\Block\\Slices\" template=\"body\"&gt;\n                    &lt;block name=\"page.body.block\" class=\"Elgentos\\PrismicIO\\Block\\Container\"&gt;\n                        &lt;arguments&gt;\n                            &lt;argument name=\"reference\" xsi:type=\"string\"&gt;primary&lt;/argument&gt;\n                        &lt;/arguments&gt;\n                        &lt;block class=\"Elgentos\\PrismicIO\\Block\\Template\" template=\"element/homepage-block.phtml\"&gt;\n                            &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Plain\" name=\"block.width\" template=\"width\" /&gt;\n                            &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Plain\" name=\"block.image\" template=\"image\" /&gt;\n                            &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Link\" name=\"block.link\" template=\"link\" /&gt;\n                        &lt;/block&gt;\n                    &lt;/block&gt;\n                &lt;/block&gt;\n            &lt;/block&gt;\n        &lt;/referenceContainer&gt;\n    &lt;/body&gt;\n&lt;/page&gt;\n</code></pre>"},{"location":"layout/handles/#best-practices","title":"Best Practices","text":"<ol> <li>Always use meaningful block names that reflect their purpose</li> <li>Group related blocks using container blocks</li> <li>Remove default blocks that aren't needed (like page.main.title) when they conflict with your Prismic content</li> <li>Keep your layout XML organized and well-commented for maintainability</li> </ol> <p>Remember that layout handles should be placed in your theme's layout directory following Magento's standard layout structure:</p> <pre><code>app/design/frontend/&lt;Vendor&gt;/&lt;theme&gt;/Elgentos_PrismicIO/layout/\n</code></pre>"},{"location":"layout/handles/#dynamic-layout-handles","title":"Dynamic Layout Handles","text":"<p>[Need info about any dynamic handles generated based on Prismic content] </p>"},{"location":"layout/slices/","title":"Slices","text":"<p>Slices in Prismic are reusable content blocks that can be dynamically arranged in your documents. The module provides specialized handling for Prismic slices.</p>"},{"location":"layout/slices/#understanding-slices","title":"Understanding Slices","text":"<p>Slices allow content editors to: - Build flexible page layouts - Reuse content components - Maintain consistent styling - Create dynamic content zones</p>"},{"location":"layout/slices/#implementation","title":"Implementation","text":""},{"location":"layout/slices/#slice-block","title":"Slice Block","text":"<pre><code>Elgentos\\PrismicIO\\Block\\Slices\n</code></pre> <p>The Slices block handles rendering of slice content from Prismic documents.</p>"},{"location":"layout/slices/#basic-usage","title":"Basic Usage","text":"<pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\Slices\" name=\"page.slices\" template=\"body\"&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Container\" name=\"slice.container\"&gt;\n        &lt;arguments&gt;\n            &lt;argument name=\"reference\" xsi:type=\"string\"&gt;primary&lt;/argument&gt;\n        &lt;/arguments&gt;\n        &lt;!-- Slice content blocks --&gt;\n    &lt;/block&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/slices/#slice-machine-integration","title":"Slice Machine Integration","text":"<p>The module provides Slice Machine support through console commands:</p> <pre><code># Initialize Slice Machine\nbin/magento elgentos:prismic:slice-machine:init --store-code=&lt;store&gt;\n\n# Start Slice Machine development\nbin/magento elgentos:prismic:slice-machine:start --store-code=&lt;store&gt;\n</code></pre>"},{"location":"layout/slices/#configuration","title":"Configuration","text":""},{"location":"layout/slices/#slice-template-structure","title":"Slice Template Structure","text":"<pre><code>templates/\n\u251c\u2500\u2500 slices/\n\u2502   \u251c\u2500\u2500 text_block.phtml\n\u2502   \u251c\u2500\u2500 image_gallery.phtml\n\u2502   \u2514\u2500\u2500 product_showcase.phtml\n\u2514\u2500\u2500 slice-wrapper.phtml\n</code></pre>"},{"location":"layout/slices/#slice-layout-example","title":"Slice Layout Example","text":"<pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\Slices\" name=\"content.slices\" template=\"content\"&gt;\n    &lt;!-- Text Block Slice --&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Container\" name=\"text.block\"&gt;\n        &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\RichText\" \n               name=\"text.content\" \n               template=\"content\"/&gt;\n    &lt;/block&gt;\n\n    &lt;!-- Image Gallery Slice --&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Container\" name=\"gallery\"&gt;\n        &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Image\" \n               name=\"gallery.images\" \n               template=\"gallery\"/&gt;\n    &lt;/block&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/slices/#creating-custom-slices","title":"Creating Custom Slices","text":"<ol> <li> <p>Define slice in Slice Machine: <pre><code>{\n  \"text_block\": {\n    \"type\": \"Slice\",\n    \"fieldset\": \"Text Block\",\n    \"description\": \"A basic text block\",\n    \"icon\": \"text_fields\",\n    \"non-repeat\": {\n      \"content\": {\n        \"type\": \"StructuredText\",\n        \"config\": {\n          \"multi\": \"paragraph,heading1,heading2\",\n          \"label\": \"Content\"\n        }\n      }\n    }\n  }\n}\n</code></pre></p> </li> <li> <p>Create template file: <pre><code>&lt;?php\n/** @var $block \\Elgentos\\PrismicIO\\Block\\Template */\n$slice = $block-&gt;getContext();\n?&gt;\n&lt;div class=\"text-block\"&gt;\n    &lt;?= $block-&gt;getChildHtml('text.content') ?&gt;\n&lt;/div&gt;\n</code></pre></p> </li> <li> <p>Add layout configuration: <pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\Container\" name=\"slice.text_block\"&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\RichText\" \n           name=\"text.content\" \n           template=\"slices/text_block\"/&gt;\n&lt;/block&gt;\n</code></pre></p> </li> </ol>"},{"location":"layout/slices/#best-practices","title":"Best Practices","text":"<ol> <li>Slice Organization</li> <li>Group related fields</li> <li>Use clear naming conventions</li> <li>Document slice purpose</li> <li> <p>Keep slices focused</p> </li> <li> <p>Development</p> </li> <li>Use Slice Machine for development</li> <li>Test slices across viewports</li> <li>Maintain consistent styling</li> <li> <p>Consider reusability</p> </li> <li> <p>Performance</p> </li> <li>Optimize slice loading</li> <li>Cache where appropriate</li> <li>Monitor resource usage</li> <li> <p>Handle large slice zones</p> </li> <li> <p>Maintenance</p> </li> <li>Document slice variations</li> <li>Keep styling consistent</li> <li>Update slice schemas</li> <li>Monitor slice usage</li> </ol>"},{"location":"layout/slices/#troubleshooting","title":"Troubleshooting","text":"<ol> <li>Slices Not Rendering</li> <li>Verify slice configuration</li> <li>Check template paths</li> <li>Validate slice data</li> <li> <p>Review block structure</p> </li> <li> <p>Styling Issues</p> </li> <li>Check CSS scope</li> <li>Verify class names</li> <li>Review responsive behavior</li> <li> <p>Test cross-browser</p> </li> <li> <p>Development Issues</p> </li> <li>Validate Slice Machine setup</li> <li>Check store configuration</li> <li>Review console errors</li> <li>Verify slice schemas </li> </ol>"},{"location":"layout/static-blocks/","title":"Static Blocks","text":"<p>Static blocks in Prismic provide a way to manage reusable content blocks that can be placed throughout your Magento store. They function similarly to Magento's CMS blocks but are managed through Prismic.</p>"},{"location":"layout/static-blocks/#understanding-static-blocks","title":"Understanding Static Blocks","text":"<p>A static block in Prismic: - Has a unique identifier (UID) - Belongs to a specific content type (default: 'static_block') - Can be referenced and rendered anywhere in your layouts - Supports multiple languages</p>"},{"location":"layout/static-blocks/#usage-examples","title":"Usage Examples","text":""},{"location":"layout/static-blocks/#basic-static-block","title":"Basic Static Block","text":"<pre><code>&lt;!-- Basic static block with default content type --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\StaticBlock\" name=\"my.static.block\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"identifier\" xsi:type=\"string\"&gt;my-block-uid&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/static-blocks/#custom-content-type-block","title":"Custom Content Type Block","text":"<pre><code>&lt;!-- Static block with custom content type --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\StaticBlock\" name=\"custom.block\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"content_type\" xsi:type=\"string\"&gt;custom_block_type&lt;/argument&gt;\n        &lt;argument name=\"identifier\" xsi:type=\"string\"&gt;custom-block-uid&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/static-blocks/#using-reference-notation","title":"Using Reference Notation","text":"<pre><code>&lt;!-- Using dot notation to specify content type and identifier --&gt;\n&lt;block class=\"Elgentos\\PrismicIO\\Block\\StaticBlock\" name=\"footer.block\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"reference\" xsi:type=\"string\"&gt;footer_block.main&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"layout/static-blocks/#reference-format","title":"Reference Format","text":"<p>You can reference static blocks in two ways:</p> <ol> <li> <p>Using separate arguments: <pre><code>&lt;arguments&gt;\n    &lt;argument name=\"content_type\" xsi:type=\"string\"&gt;static_block&lt;/argument&gt;\n    &lt;argument name=\"identifier\" xsi:type=\"string\"&gt;my-block&lt;/argument&gt;\n&lt;/arguments&gt;\n</code></pre></p> </li> <li> <p>Using dot notation in the reference: <pre><code>&lt;arguments&gt;\n    &lt;argument name=\"reference\" xsi:type=\"string\"&gt;static_block.my-block&lt;/argument&gt;\n&lt;/arguments&gt;\n</code></pre></p> </li> </ol> <p>The format is: <code>content_type.identifier</code></p>"},{"location":"layout/static-blocks/#technical-details","title":"Technical Details","text":"<p>The static block system: 1. Creates a Prismic document based on the provided identifier and content type 2. Fetches the document content from Prismic 3. Renders all child blocks within the context of the fetched document</p>"},{"location":"layout/static-blocks/#error-handling","title":"Error Handling","text":"<p>The block will: - Return an empty string if no identifier is provided - Throw a <code>StaticBlockNotFoundException</code> if the referenced document cannot be found - Include helpful debug information when exceptions occur, such as:   - UID   - Content type   - Language</p>"},{"location":"layout/static-blocks/#best-practices","title":"Best Practices","text":"<ol> <li>Use meaningful identifiers that reflect the block's purpose</li> <li>Keep content types organized and consistent</li> <li>Consider using the dot notation reference for cleaner XML</li> <li>Handle potential missing blocks gracefully in your templates</li> <li>Use appropriate language settings for multi-language stores</li> <li>Cache static block output when possible for better performance </li> </ol>"},{"location":"layout/template/","title":"Templates","text":"<p>Templates define how your Prismic content is rendered in Magento 2. Here's how to work with templates effectively.</p>"},{"location":"layout/template/#template-structure","title":"Template Structure","text":"<p>A typical Prismic template consists of multiple parts:</p> <ol> <li>The main template file</li> <li>Element templates for specific content blocks</li> <li>Layout configuration that ties it all together</li> </ol>"},{"location":"layout/template/#example-implementation","title":"Example Implementation","text":"<p>Here's a complete example showing how to structure templates for a homepage:</p> <ol> <li>Create your main template (<code>homepage.phtml</code>):</li> </ol> <pre><code>&lt;?php declare(strict_types=1);\n/** @var $block \\Elgentos\\PrismicIO\\Block\\Template */\n?&gt;\n&lt;section class=\"content-wrap\"&gt;\n    &lt;div class=\"grid lg:grid-cols-6\"&gt;\n        &lt;?php echo $block-&gt;getChildHtml('page.body'); ?&gt;\n    &lt;/div&gt;\n&lt;/section&gt;\n</code></pre> <ol> <li>Create your element template (<code>element/homepage-block.phtml</code>) for individual content blocks:</li> </ol> <pre><code>&lt;?php declare(strict_types=1);\n/** @var $block \\Elgentos\\PrismicIO\\Block\\Template */\n$homepageBlock = $block-&gt;getContext();\n?&gt;\n&lt;div class=\"block &lt;?= $block-&gt;getChildHtml('block.width') ?&gt;\"&gt;\n    &lt;a href=\"&lt;?= $block-&gt;getChildHtml('block.link') ?&gt;\"&gt;\n        &lt;img src=\"&lt;?= $block-&gt;getChildHtml('block.image') ?&gt;\" alt=\"\"&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"layout/template/#best-practices","title":"Best Practices","text":"<ol> <li>Keep templates focused on presentation logic</li> <li>Use meaningful template names that reflect their purpose</li> <li>Organize templates in appropriate directories based on their function</li> <li>Use PHP DocBlocks to properly type-hint block classes</li> <li>Leverage block methods like <code>getChildHtml()</code> for structured content</li> <li>Keep presentation logic in templates and structural logic in blocks </li> </ol>"},{"location":"technical/console-commands/","title":"Console Commands","text":"<p>The module provides several console commands for managing Prismic integration.</p>"},{"location":"technical/console-commands/#available-commands","title":"Available Commands","text":""},{"location":"technical/console-commands/#scaffold-command","title":"Scaffold Command","text":"<pre><code>Elgentos\\PrismicIO\\Console\\Command\\Scaffold\n</code></pre> <p>Creates necessary files for a new Prismic custom type.</p> <pre><code>bin/magento prismic:scaffold &lt;custom-type&gt;\n</code></pre>"},{"location":"technical/console-commands/#slice-machine-commands","title":"Slice Machine Commands","text":""},{"location":"technical/console-commands/#initialize","title":"Initialize","text":"<pre><code>Elgentos\\PrismicIO\\Console\\Command\\SliceMachineInit\n</code></pre> <p>Initializes Slice Machine configuration:</p> <pre><code>bin/magento elgentos:prismic:slice-machine:init --store-code=&lt;store&gt;\n</code></pre>"},{"location":"technical/console-commands/#start","title":"Start","text":"<pre><code>Elgentos\\PrismicIO\\Console\\Command\\SliceMachineStart\n</code></pre> <p>Starts the Slice Machine development environment:</p> <pre><code>bin/magento elgentos:prismic:slice-machine:start --store-code=&lt;store&gt;\n</code></pre>"},{"location":"technical/console-commands/#implementation-details","title":"Implementation Details","text":""},{"location":"technical/console-commands/#scaffold-command_1","title":"Scaffold Command","text":"<p>Creates: - Layout files - Templates - Route configurations - JSON schema</p>"},{"location":"technical/console-commands/#slice-machine-integration","title":"Slice Machine Integration","text":"<ul> <li>Creates configuration files</li> <li>Sets up development environment</li> <li>Handles multi-store setups</li> </ul>"},{"location":"technical/console-commands/#usage-examples","title":"Usage Examples","text":""},{"location":"technical/console-commands/#creating-a-new-content-type","title":"Creating a New Content Type","text":"<pre><code># Create a new blog post type\nbin/magento prismic:scaffold blog_post\n</code></pre>"},{"location":"technical/console-commands/#setting-up-slice-machine","title":"Setting Up Slice Machine","text":"<pre><code># Initialize for specific store\nbin/magento elgentos:prismic:slice-machine:init --store-code=default\n\n# Start development environment\nbin/magento elgentos:prismic:slice-machine:start --store-code=default\n</code></pre>"},{"location":"technical/console-commands/#best-practices","title":"Best Practices","text":"<ol> <li>Scaffolding</li> <li>Use consistent naming</li> <li>Follow content type patterns</li> <li> <p>Verify generated files</p> </li> <li> <p>Slice Machine</p> </li> <li>Use store-specific configurations</li> <li>Maintain version control</li> <li> <p>Document custom slices</p> </li> <li> <p>Development</p> </li> <li>Test generated code</li> <li>Follow coding standards</li> <li>Update documentation </li> </ol>"},{"location":"technical/exceptions/","title":"Exceptions","text":"<p>The module provides several custom exceptions for handling various error conditions.</p>"},{"location":"technical/exceptions/#core-exceptions","title":"Core Exceptions","text":""},{"location":"technical/exceptions/#apinotenabledexception","title":"ApiNotEnabledException","text":"<p>Thrown when attempting to use the API while it's disabled.</p>"},{"location":"technical/exceptions/#contextnotfoundexception","title":"ContextNotFoundException","text":"<p>Thrown when a requested document context cannot be found.</p>"},{"location":"technical/exceptions/#documentnotfoundexception","title":"DocumentNotFoundException","text":"<p>Thrown when a requested Prismic document doesn't exist.</p>"},{"location":"technical/exceptions/#routenotfoundexception","title":"RouteNotFoundException","text":"<p>Thrown when a requested route cannot be found.</p>"},{"location":"technical/exceptions/#staticblocknotfoundexception","title":"StaticBlockNotFoundException","text":"<p>Thrown when a static block cannot be found.</p>"},{"location":"technical/exceptions/#implementation","title":"Implementation","text":""},{"location":"technical/exceptions/#exception-handling","title":"Exception Handling","text":"<pre><code>try {\n    $document = $this-&gt;getDocument();\n} catch (DocumentNotFoundException $e) {\n    // Handle missing document\n} catch (ContextNotFoundException $e) {\n    // Handle missing context\n}\n</code></pre>"},{"location":"technical/exceptions/#configuration-based-handling","title":"Configuration-Based Handling","text":"<p>The module can be configured to handle exceptions differently based on environment:</p> <pre><code>&lt;prismicio&gt;\n    &lt;content&gt;\n        &lt;throw_exceptions&gt;0&lt;/throw_exceptions&gt;\n    &lt;/content&gt;\n&lt;/prismicio&gt;\n</code></pre>"},{"location":"technical/exceptions/#best-practices","title":"Best Practices","text":"<ol> <li>Exception Types</li> <li>Use specific exceptions</li> <li>Maintain hierarchy</li> <li> <p>Document error conditions</p> </li> <li> <p>Error Handling</p> </li> <li>Graceful degradation</li> <li>Proper logging</li> <li> <p>User-friendly messages</p> </li> <li> <p>Development</p> </li> <li>Debug mode considerations</li> <li>Proper error reporting</li> <li>Exception documentation </li> </ol>"},{"location":"technical/preview-mode/","title":"Preview Mode","text":"<p>The preview mode functionality allows content editors to preview Prismic content changes before publishing them to the live site.</p>"},{"location":"technical/preview-mode/#components","title":"Components","text":""},{"location":"technical/preview-mode/#previewmode-block","title":"PreviewMode Block","text":"<pre><code>Elgentos\\PrismicIO\\Block\\PreviewMode\n</code></pre> <p>The PreviewMode block handles the integration of Prismic's preview script and is automatically added to pages when preview mode is enabled.</p>"},{"location":"technical/preview-mode/#preview-controller","title":"Preview Controller","text":"<pre><code>Elgentos\\PrismicIO\\Controller\\Preview\\Index\n</code></pre> <p>Handles preview requests and redirects to the appropriate page.</p>"},{"location":"technical/preview-mode/#configuration","title":"Configuration","text":"<p>Preview mode can be enabled in the Magento admin:</p> <pre><code>&lt;prismicio&gt;\n    &lt;content&gt;\n        &lt;allow_preview&gt;1&lt;/allow_preview&gt;\n    &lt;/content&gt;\n&lt;/prismicio&gt;\n</code></pre>"},{"location":"technical/preview-mode/#implementation","title":"Implementation","text":""},{"location":"technical/preview-mode/#preview-script-integration","title":"Preview Script Integration","text":"<p>The module automatically adds the Prismic preview script to your pages when preview is enabled:</p> <pre><code>const PRISMICIO_PREVIEW_URL = 'https://static.cdn.prismic.io/prismic.js?new=true&amp;repo=';\n</code></pre>"},{"location":"technical/preview-mode/#preview-flow","title":"Preview Flow","text":"<ol> <li>Editor clicks preview in Prismic</li> <li>Request is sent to <code>/prismicio/preview/index</code></li> <li>PreviewController validates the token</li> <li>Controller resolves the document URL</li> <li>User is redirected to the preview page</li> </ol>"},{"location":"technical/preview-mode/#security-considerations","title":"Security Considerations","text":"<p>The preview controller: - Only works when preview mode is enabled - Validates preview tokens - Falls back to 404 for invalid requests</p>"},{"location":"technical/preview-mode/#template-integration","title":"Template Integration","text":"<pre><code>&lt;referenceBlock name=\"before.body.end\"&gt;\n    &lt;block ifconfig=\"prismicio/content/allow_preview\" \n           name=\"prismicio_preview_html\" \n           class=\"Elgentos\\PrismicIO\\Block\\PreviewMode\" \n           template=\"Elgentos_PrismicIO::preview-mode.phtml\" /&gt;\n&lt;/referenceBlock&gt;\n</code></pre>"},{"location":"technical/preview-mode/#api-methods","title":"API Methods","text":""},{"location":"technical/preview-mode/#previewmode-block_1","title":"PreviewMode Block","text":"<pre><code>public function getApiEndpoint(): string\npublic function getRepoName(): string\npublic function getPreviewUrl(): string\n</code></pre>"},{"location":"technical/preview-mode/#preview-controller_1","title":"Preview Controller","text":"<pre><code>public function execute()\n</code></pre>"},{"location":"technical/preview-mode/#best-practices","title":"Best Practices","text":"<ol> <li>Security</li> <li>Only enable preview in necessary environments</li> <li>Use HTTPS for preview requests</li> <li> <p>Implement proper access controls</p> </li> <li> <p>Performance</p> </li> <li>Preview script is only loaded when preview is enabled</li> <li>Preview requests are not cached</li> <li> <p>Preview mode is disabled by default</p> </li> <li> <p>Implementation</p> </li> <li>Use proper preview URLs in Prismic configuration</li> <li>Handle preview timeouts appropriately</li> <li>Consider preview in multi-store setups</li> </ol>"},{"location":"technical/preview-mode/#troubleshooting","title":"Troubleshooting","text":"<p>Common issues and solutions:</p> <ol> <li>Preview Not Working</li> <li>Verify preview mode is enabled</li> <li>Check preview URL configuration in Prismic</li> <li> <p>Validate preview token handling</p> </li> <li> <p>Preview Script Issues</p> </li> <li>Check CSP configuration</li> <li>Verify repository name resolution</li> <li> <p>Monitor browser console for errors</p> </li> <li> <p>Preview Routing</p> </li> <li>Verify LinkResolver configuration</li> <li>Check store-specific preview handling</li> <li>Review preview URL generation </li> </ol>"},{"location":"technical/registry/","title":"Registry","text":"<p>The module uses registry classes to maintain state across requests and manage current document and route information.</p>"},{"location":"technical/registry/#core-registry-classes","title":"Core Registry Classes","text":""},{"location":"technical/registry/#currentdocument","title":"CurrentDocument","text":"<pre><code>Elgentos\\PrismicIO\\Registry\\CurrentDocument\n</code></pre> <p>Maintains reference to the current Prismic document.</p>"},{"location":"technical/registry/#currentroute","title":"CurrentRoute","text":"<pre><code>Elgentos\\PrismicIO\\Registry\\CurrentRoute\n</code></pre> <p>Maintains reference to the current route.</p>"},{"location":"technical/registry/#implementation","title":"Implementation","text":""},{"location":"technical/registry/#currentdocument_1","title":"CurrentDocument","text":"<pre><code>public function setDocument(\\stdClass $document): void\npublic function getDocument(): ?\\stdClass\n</code></pre>"},{"location":"technical/registry/#currentroute_1","title":"CurrentRoute","text":"<pre><code>public function setRoute(RouteInterface $route): void\npublic function getRoute(): ?RouteInterface\n</code></pre>"},{"location":"technical/registry/#usage-examples","title":"Usage Examples","text":""},{"location":"technical/registry/#document-registry","title":"Document Registry","text":"<pre><code>/** @var $currentDocument CurrentDocument */\nif ($document = $currentDocument-&gt;getDocument()) {\n    // Process current document\n}\n</code></pre>"},{"location":"technical/registry/#route-registry","title":"Route Registry","text":"<pre><code>/** @var $currentRoute CurrentRoute */\nif ($route = $currentRoute-&gt;getRoute()) {\n    // Process current route\n}\n</code></pre>"},{"location":"technical/registry/#best-practices","title":"Best Practices","text":"<ol> <li>State Management</li> <li>Clear registry when needed</li> <li>Avoid circular references</li> <li> <p>Handle missing data</p> </li> <li> <p>Performance</p> </li> <li>Minimize registry usage</li> <li>Clear unnecessary data</li> <li> <p>Consider memory impact</p> </li> <li> <p>Development</p> </li> <li>Document registry usage</li> <li>Handle edge cases</li> <li>Maintain consistency </li> </ol>"},{"location":"technical/renderer/","title":"Renderer","text":"<p>The module provides rendering functionality for Prismic content through various components and blocks.</p>"},{"location":"technical/renderer/#components","title":"Components","text":""},{"location":"technical/renderer/#page-renderer","title":"Page Renderer","text":"<p>Handles the main page rendering for Prismic content.</p>"},{"location":"technical/renderer/#block-renderer","title":"Block Renderer","text":"<p>Manages individual block rendering within Prismic content.</p>"},{"location":"technical/renderer/#template-integration","title":"Template Integration","text":"<p>Integrates with Magento's template system.</p>"},{"location":"technical/renderer/#implementation","title":"Implementation","text":""},{"location":"technical/renderer/#page-rendering","title":"Page Rendering","text":"<pre><code>public function renderPageByUid(string $uid, string $contentType = null)\n{\n    // Fetch and render document\n}\n</code></pre>"},{"location":"technical/renderer/#block-rendering","title":"Block Rendering","text":"<pre><code>public function fetchDocumentView(): string\n{\n    // Render document blocks\n}\n</code></pre>"},{"location":"technical/renderer/#layout-integration","title":"Layout Integration","text":""},{"location":"technical/renderer/#default-layout","title":"Default Layout","text":"<pre><code>&lt;page&gt;\n    &lt;body&gt;\n        &lt;referenceContainer name=\"content\"&gt;\n            &lt;container name=\"prismicio_content\" /&gt;\n        &lt;/referenceContainer&gt;\n    &lt;/body&gt;\n&lt;/page&gt;\n</code></pre>"},{"location":"technical/renderer/#content-types","title":"Content Types","text":"<pre><code>&lt;handle id=\"prismicio_by_type_blog_post\"&gt;\n    &lt;reference name=\"content\"&gt;\n        &lt;block class=\"Elgentos\\PrismicIO\\Block\\Template\" \n               template=\"blog/post.phtml\"/&gt;\n    &lt;/reference&gt;\n&lt;/handle&gt;\n</code></pre>"},{"location":"technical/renderer/#best-practices","title":"Best Practices","text":"<ol> <li>Performance</li> <li>Implement caching</li> <li>Optimize rendering</li> <li> <p>Handle large documents</p> </li> <li> <p>Template Structure</p> </li> <li>Maintain hierarchy</li> <li>Use proper blocks</li> <li> <p>Document templates</p> </li> <li> <p>Error Handling</p> </li> <li>Graceful fallbacks</li> <li>Clear error messages</li> <li>Debug information </li> </ol>"},{"location":"technical/viewmodels/","title":"View Models","text":"<p>The module provides several view models for handling Prismic content rendering and URL resolution.</p>"},{"location":"technical/viewmodels/#core-view-models","title":"Core View Models","text":""},{"location":"technical/viewmodels/#documentresolver","title":"DocumentResolver","text":"<pre><code>Elgentos\\PrismicIO\\ViewModel\\DocumentResolver\n</code></pre> <p>Handles document context and reference resolution.</p>"},{"location":"technical/viewmodels/#linkresolver","title":"LinkResolver","text":"<pre><code>Elgentos\\PrismicIO\\ViewModel\\LinkResolver\n</code></pre> <p>Resolves Prismic document links to Magento URLs.</p>"},{"location":"technical/viewmodels/#htmlserializer","title":"HtmlSerializer","text":"<pre><code>Elgentos\\PrismicIO\\ViewModel\\HtmlSerializer\n</code></pre> <p>Handles custom HTML serialization for Rich Text content.</p>"},{"location":"technical/viewmodels/#routeresolver","title":"RouteResolver","text":"<pre><code>Elgentos\\PrismicIO\\ViewModel\\RouteResolver\n</code></pre> <p>Manages route resolution for Prismic documents.</p>"},{"location":"technical/viewmodels/#implementation","title":"Implementation","text":""},{"location":"technical/viewmodels/#documentresolver_1","title":"DocumentResolver","text":"<pre><code>public function hasDocument(): bool\npublic function getDocument(): \\stdClass\npublic function hasContext(string $documentReference, \\stdClass $document = null): bool\npublic function getContext(string $documentReference, \\stdClass $document = null)\n</code></pre>"},{"location":"technical/viewmodels/#linkresolver_1","title":"LinkResolver","text":"<pre><code>public function resolve($link): ?string\npublic function getStore(\\stdClass $link): StoreInterface\npublic function resolveRouteUrl(\\stdClass $link): ?string\npublic function resolveDirectPage(\\stdClass $link): ?string\n</code></pre>"},{"location":"technical/viewmodels/#htmlserializer_1","title":"HtmlSerializer","text":"<pre><code>public function serialize(BlockInterface $object, string $content): ?string\n</code></pre>"},{"location":"technical/viewmodels/#usage-examples","title":"Usage Examples","text":""},{"location":"technical/viewmodels/#document-resolution","title":"Document Resolution","text":"<pre><code>/** @var $documentResolver DocumentResolver */\nif ($documentResolver-&gt;hasContext('data.title')) {\n    $title = $documentResolver-&gt;getContext('data.title');\n}\n</code></pre>"},{"location":"technical/viewmodels/#link-resolution","title":"Link Resolution","text":"<pre><code>/** @var $linkResolver LinkResolver */\n$url = $linkResolver-&gt;resolve($document);\n</code></pre>"},{"location":"technical/viewmodels/#route-resolution","title":"Route Resolution","text":"<pre><code>/** @var $routeResolver RouteResolver */\nif ($routeResolver-&gt;hasRoute()) {\n    $route = $routeResolver-&gt;getRoute();\n}\n</code></pre>"},{"location":"technical/viewmodels/#best-practices","title":"Best Practices","text":"<ol> <li>Document Handling</li> <li>Check document existence</li> <li>Handle missing contexts</li> <li> <p>Use proper error handling</p> </li> <li> <p>Link Resolution</p> </li> <li>Consider multi-store setup</li> <li>Handle missing routes</li> <li> <p>Implement caching</p> </li> <li> <p>Route Management</p> </li> <li>Validate routes</li> <li>Handle store-specific routes</li> <li>Document routing patterns </li> </ol>"},{"location":"technical/blocks/container/","title":"Container Block","text":"<p>The Container block provides a way to group and organize Prismic content blocks.</p>"},{"location":"technical/blocks/container/#implementation","title":"Implementation","text":""},{"location":"technical/blocks/container/#container-block-class","title":"Container Block Class","text":"<pre><code>Elgentos\\PrismicIO\\Block\\Container\n</code></pre> <p>Extends the abstract block to provide container functionality.</p>"},{"location":"technical/blocks/container/#key-features","title":"Key Features","text":"<ul> <li>Groups related content blocks</li> <li>Manages shared context</li> <li>Handles nested structures</li> <li>Provides scope isolation</li> </ul>"},{"location":"technical/blocks/container/#usage","title":"Usage","text":""},{"location":"technical/blocks/container/#basic-container","title":"Basic Container","text":"<pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\Container\" name=\"prismic.content\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"reference\" xsi:type=\"string\"&gt;data&lt;/argument&gt;\n    &lt;/arguments&gt;\n    &lt;!-- Child blocks --&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"technical/blocks/container/#nested-containers","title":"Nested Containers","text":"<pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\Container\" name=\"outer.container\"&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Container\" name=\"inner.container\"&gt;\n        &lt;!-- Nested content --&gt;\n    &lt;/block&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"technical/blocks/container/#context-management","title":"Context Management","text":""},{"location":"technical/blocks/container/#reference-handling","title":"Reference Handling","text":"<p>Containers can specify their reference scope:</p> <pre><code>&lt;arguments&gt;\n    &lt;argument name=\"reference\" xsi:type=\"string\"&gt;data.section&lt;/argument&gt;\n&lt;/arguments&gt;\n</code></pre>"},{"location":"technical/blocks/container/#context-inheritance","title":"Context Inheritance","text":"<p>Child blocks inherit their parent container's context unless explicitly overridden.</p>"},{"location":"technical/blocks/container/#best-practices","title":"Best Practices","text":"<ol> <li>Organization</li> <li>Group related content</li> <li>Use meaningful names</li> <li> <p>Maintain clear hierarchy</p> </li> <li> <p>Performance</p> </li> <li>Avoid deep nesting</li> <li>Consider caching strategies</li> <li> <p>Monitor render times</p> </li> <li> <p>Maintenance</p> </li> <li>Document container structure</li> <li>Keep layouts organized</li> <li>Use consistent patterns </li> </ol>"},{"location":"technical/blocks/overview/","title":"Overview Block","text":"<p>The Overview block (<code>Elgentos\\PrismicIO\\Block\\Overview</code>) provides functionality for displaying lists or collections of Prismic documents.</p>"},{"location":"technical/blocks/overview/#features","title":"Features","text":"<ul> <li>Fetches multiple documents of the same type</li> <li>Supports filtering and sorting</li> <li>Handles language fallbacks</li> <li>Manages document merging</li> </ul>"},{"location":"technical/blocks/overview/#implementation","title":"Implementation","text":""},{"location":"technical/blocks/overview/#core-methods","title":"Core Methods","text":"<pre><code>public function getDocuments(): array\npublic function getDocumentsWithoutLanguage(): array\npublic function buildFilters(): array\npublic function buildQuery(): array\npublic function mergeDocuments(\\stdClass ...$allDocuments): array\n</code></pre>"},{"location":"technical/blocks/overview/#configuration","title":"Configuration","text":"<pre><code>&lt;block class=\"Elgentos\\PrismicIO\\Block\\Overview\" name=\"blog.list\"&gt;\n    &lt;arguments&gt;\n        &lt;argument name=\"document_type\" xsi:type=\"string\"&gt;blog_post&lt;/argument&gt;\n    &lt;/arguments&gt;\n&lt;/block&gt;\n</code></pre>"},{"location":"technical/blocks/overview/#usage-examples","title":"Usage Examples","text":""},{"location":"technical/blocks/overview/#basic-document-list","title":"Basic Document List","text":"<pre><code>/** @var $block \\Elgentos\\PrismicIO\\Block\\Overview */\nforeach ($block-&gt;getDocuments() as $document) {\n    // Process each document\n}\n</code></pre>"},{"location":"technical/blocks/overview/#filtered-list","title":"Filtered List","text":"<pre><code>$block-&gt;setAllowedFilters([\n    'category' =&gt; 'my.blog_post.category'\n]);\n</code></pre>"},{"location":"technical/blocks/overview/#custom-options","title":"Custom Options","text":"<pre><code>$block-&gt;setOptions([\n    'pageSize' =&gt; 10,\n    'orderings' =&gt; '[document.first_publication_date desc]'\n]);\n</code></pre>"},{"location":"technical/blocks/overview/#best-practices","title":"Best Practices","text":"<ol> <li>Performance</li> <li>Use appropriate page sizes</li> <li>Implement caching where possible</li> <li> <p>Consider lazy loading</p> </li> <li> <p>Language Handling</p> </li> <li>Use proper language fallbacks</li> <li>Handle missing translations</li> <li> <p>Consider multi-store setups</p> </li> <li> <p>Query Building</p> </li> <li>Keep filters simple</li> <li>Use meaningful predicates</li> <li>Document query structure </li> </ol>"},{"location":"technical/blocks/title-and-metadata/","title":"Title and Metadata","text":"<p>The module provides functionality for managing page titles, meta tags, and other metadata from Prismic content.</p>"},{"location":"technical/blocks/title-and-metadata/#components","title":"Components","text":""},{"location":"technical/blocks/title-and-metadata/#canonical-block","title":"Canonical Block","text":"<p><pre><code>Elgentos\\PrismicIO\\Block\\Canonical\n</code></pre> Generates canonical URLs for Prismic content.</p>"},{"location":"technical/blocks/title-and-metadata/#alternatelanguage-block","title":"AlternateLanguage Block","text":"<p><pre><code>Elgentos\\PrismicIO\\Block\\AlternateLanguage\n</code></pre> Handles hreflang tags for multilingual content.</p>"},{"location":"technical/blocks/title-and-metadata/#implementation","title":"Implementation","text":""},{"location":"technical/blocks/title-and-metadata/#layout-integration","title":"Layout Integration","text":"<pre><code>&lt;referenceBlock name=\"head.additional\"&gt;\n    &lt;block name=\"prismicio_alternate_links\" \n           class=\"Elgentos\\PrismicIO\\Block\\AlternateLanguage\" \n           template=\"alternate_links.phtml\" /&gt;\n    &lt;block name=\"prismicio_canonical\" \n           class=\"Elgentos\\PrismicIO\\Block\\Canonical\" \n           template=\"canonical.phtml\" /&gt;\n&lt;/referenceBlock&gt;\n</code></pre>"},{"location":"technical/blocks/title-and-metadata/#metadata-handling","title":"Metadata Handling","text":"<p>The module can handle various metadata: - Page titles - Meta descriptions - Open Graph tags - Twitter cards - Canonical URLs - Alternate language links</p>"},{"location":"technical/blocks/title-and-metadata/#usage-examples","title":"Usage Examples","text":""},{"location":"technical/blocks/title-and-metadata/#page-title","title":"Page Title","text":"<pre><code>&lt;referenceBlock name=\"page.main.title\"&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Dom\\Plain\" \n           template=\"data.meta_title\"/&gt;\n&lt;/referenceBlock&gt;\n</code></pre>"},{"location":"technical/blocks/title-and-metadata/#meta-description","title":"Meta Description","text":"<pre><code>&lt;referenceBlock name=\"head.additional\"&gt;\n    &lt;block class=\"Elgentos\\PrismicIO\\Block\\Metadata\" \n           name=\"prismic.metadata\"&gt;\n        &lt;arguments&gt;\n            &lt;argument name=\"reference\" xsi:type=\"string\"&gt;data.meta_description&lt;/argument&gt;\n        &lt;/arguments&gt;\n    &lt;/block&gt;\n&lt;/referenceBlock&gt;\n</code></pre>"},{"location":"technical/blocks/title-and-metadata/#best-practices","title":"Best Practices","text":"<ol> <li>SEO Optimization</li> <li>Always provide meta descriptions</li> <li>Use proper canonical URLs</li> <li> <p>Implement hreflang correctly</p> </li> <li> <p>Multi-store Support</p> </li> <li>Handle store-specific metadata</li> <li>Consider language variations</li> <li> <p>Maintain consistent URLs</p> </li> <li> <p>Performance</p> </li> <li>Cache metadata appropriately</li> <li>Optimize metadata generation</li> <li>Monitor page load impact </li> </ol>"}]}